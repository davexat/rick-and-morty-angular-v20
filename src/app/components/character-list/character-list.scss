// Rick and Morty Theme Colors (mÃ¡s colorido y espacial)
@import url('https://fonts.googleapis.com/css2?family=Creepster&family=Orbitron:wght@400;700;900&family=Roboto:wght@400;500;600;700&display=swap');


.character-container {
  padding: 2rem;
  background: transparent;
  min-height: 100vh;
  font-family: 'Roboto', sans-serif;
  position: relative;
  z-index: 1;
}

// Search Container Styles
.search-container {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  position: relative;
  z-index: 2;

  input {
    flex: 1;
    max-width: 400px;
    padding: 1rem 1.5rem;
    border: 3px solid var(--rick-green);
    border-radius: 25px;
    background: rgba(255, 255, 255, 0.95);
    color: var(--text-dark);
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px var(--shadow-color);
    
    &::placeholder {
      color: rgba(33, 33, 33, 0.6);
    }

    &:focus {
      outline: none;
      border-color: var(--morty-yellow);
      box-shadow: 0 0 20px rgba(255, 235, 59, 0.4);
      transform: translateY(-2px);
      background: rgba(255, 255, 255, 1);
    }
  }

  button {
    padding: 1rem 2rem;
    border: 3px solid var(--rick-green);
    border-radius: 25px;
    background: linear-gradient(45deg, var(--rick-green), var(--portal-blue));
    color: white;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-width: 120px;
    box-shadow: 0 4px 15px var(--shadow-color);

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      transition: left 0.5s;
    }

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 230, 118, 0.4);
      border-color: var(--morty-yellow);
      
      &::before {
        left: 100%;
      }
    }

    &:active {
      transform: translateY(0);
    }
  }
}

// Loading State
.loading-state {
  text-align: center;
  padding: 3rem;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 15px;
  box-shadow: 0 4px 20px var(--shadow-color);
  margin: 2rem auto;
  max-width: 400px;
  
  p {
    color: var(--rick-green);
    font-size: 1.2rem;
    margin: 0;
    animation: pulse 2s infinite;
    font-weight: bold;
  }
}

@keyframes pulse {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 1; }
}

// Error State
.error-state {
  text-align: center;
  padding: 2rem;
  background: rgba(255, 255, 255, 0.95);
  border-radius: 15px;
  border: 3px solid var(--error-red);
  margin: 2rem auto;
  max-width: 500px;
  box-shadow: 0 4px 20px var(--shadow-color);
  
  p {
    color: var(--error-red);
    font-size: 1.1rem;
    margin: 0;
    font-weight: bold;
  }
}

// Character Grid
.character-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 2rem;
  max-width: 1400px;
  margin: 0 auto;
}

// Character Card
.character-card {
  background: var(--card-bg);
  border-radius: 20px;
  padding: 1.5rem;
  text-align: center;
  transition: all 0.3s ease;
  border: 3px solid var(--rick-green);
  position: relative;
  overflow: hidden;
  box-shadow: 0 15px 35px var(--card-shadow);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 6px;
    background: linear-gradient(90deg, var(--rick-green), var(--morty-yellow), var(--portal-blue), var(--alien-purple));
  }

  &:hover {
    transform: translateY(-15px);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.4);
    border-color: var(--morty-yellow);
    
    &::before {
      height: 10px;
    }
  }
}

// Character Image
.character-image {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  object-fit: cover;
  border: 4px solid var(--rick-green);
  margin-bottom: 1rem;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px var(--shadow-color);

  .character-card:hover & {
    border-color: var(--morty-yellow);
    transform: scale(1.05);
    box-shadow: 0 8px 25px rgba(0, 230, 118, 0.4);
  }
}

// Character Info
.character-info {
  color: var(--text-card);

  h3 {
    font-size: 1.5rem;
    margin: 0 0 1rem 0;
    color: var(--rick-green);
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    font-weight: bold;
  }

  p {
    margin: 0.5rem 0;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-light);
    
    &:first-of-type {
      font-weight: bold;
      
      // Status-specific colors (mÃ¡s visibles)
      &:contains("Alive") {
        color: var(--success-green);
      }
      
      &:contains("Dead") {
        color: var(--error-red);
      }
      
      &:contains("unknown") {
        color: var(--alien-purple);
      }
    }

    &:last-of-type {
      color: var(--portal-blue);
    }
  }
}

// Empty State
.empty-state {
  text-align: center;
  padding: 4rem 2rem;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 20px;
  box-shadow: 0 8px 25px var(--shadow-color);
  margin: 2rem auto;
  max-width: 500px;
  
  p {
    font-size: 1.3rem;
    margin: 0;
    color: var(--text-dark);
    font-weight: 600;
    
    &::before {
      content: 'ðŸ›¸';
      display: block;
      font-size: 4rem;
      margin-bottom: 1rem;
      animation: float 3s ease-in-out infinite;
    }
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

// Responsive Design
@media (max-width: 768px) {
  .character-container {
    padding: 1rem;
  }

  .search-container {
    flex-direction: column;
    align-items: center;
    
    input {
      max-width: 100%;
    }
    
    button {
      width: 100%;
      max-width: 300px;
    }
  }

  .character-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
  }

  .character-image {
    width: 150px;
    height: 150px;
  }
}

@media (max-width: 480px) {
  .character-grid {
    grid-template-columns: 1fr;
  }

  .character-card {
    padding: 1rem;
  }

  .character-image {
    width: 120px;
    height: 120px;
  }

  .character-info h3 {
    font-size: 1.2rem;
  }
}

// Animations for new cards
.character-card {
  animation: fadeInUp 0.6s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Special portal effect for Rick and Morty themed elements
.search-container::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, var(--rick-green) 0%, transparent 70%);
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  transform: translate(-50%, -50%);
  animation: portalPulse 4s ease-in-out infinite;
}

@keyframes portalPulse {
  0%, 100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
  }
  50% {
    opacity: 0.1;
    transform: translate(-50%, -50%) scale(2);
  }
}
